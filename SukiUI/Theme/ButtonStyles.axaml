<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:material="using:Material.Icons.Avalonia"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Design.PreviewWith>
        <WrapPanel
            Background="{DynamicResource SukiBackground}"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <TextBox Text="test" Width="100" />

            <Button Classes="Primary">
                <TextBlock>Primary</TextBlock>
            </Button>
            
            <Button Classes="Accent">
                <TextBlock>Accent</TextBlock>
            </Button>

            <Button Classes="Primary Rounded">
                <TextBlock>Primary Round</TextBlock>
            </Button>

            <Button>
                <TextBlock>Neutral</TextBlock>
            </Button>

            <Button Classes="Outlined">
                <TextBlock>Outlined</TextBlock>
            </Button>
        </WrapPanel>
    </Design.PreviewWith>
    
    <ControlTheme x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="Height" Value="43" />
        <Setter Property="BorderThickness" Value="1.2" />
        <Setter Property="BorderBrush" Value="{DynamicResource SukiMediumBorderBrush}" />
        <Setter Property="Padding" Value="18,9,18,8" />
        <Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="{DynamicResource SukiBackground}" />

        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BoxShadow="{DynamicResource SukiLowShadow}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="4,4,4,4"
                    Name="PART_ContentPresenter"
                    Padding="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    TextElement.Foreground="{TemplateBinding Foreground}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ControlTemplate>
        </Setter>
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Duration="0:0:0.35" Property="Background" />
            </Transitions>
        </Setter>
        
        <!-- <Style Selector="^ > TextBlock"> -->
        <!--     <Setter Property="Transitions"> -->
        <!--         <Transitions> -->
        <!--             <BrushTransition Duration="0:0:0.3" Property="Foreground" /> -->
        <!--         </Transitions> -->
        <!--     </Setter> -->
        <!-- </Style> -->
        
        <Style Selector="^ /template/ ContentPresenter">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Duration="0:0:0.3" Property="Foreground" />
                </Transitions>
            </Setter>
        </Style>

        <!-- <Style Selector="^:pointerover > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" /> -->
        <!-- </Style> -->
        
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>

        <!-- <Style Selector="^:pressed > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" /> -->
        <!-- </Style> -->
        
        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Duration="0:0:0.3" Property="BorderBrush" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColorGradient}" />
        </Style>
        
        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SukiBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>

        <Style Selector="^.Accent">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="11,8" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Margin" Value="5 5" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        
        <!-- <Style Selector="^.Accent > TextBlock"> -->
        <!--     <Setter Property="Foreground"> -->
        <!--         <Setter.Value> -->
        <!--             <LinearGradientBrush EndPoint="50%,100%" StartPoint="48%,0%"> -->
        <!--                 <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="0.8" /> -->
        <!--                 <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="1" /> -->
        <!--             </LinearGradientBrush> -->
        <!--         </Setter.Value> -->
        <!--     </Setter> -->
        <!-- </Style> -->
        
        <Style Selector="^.Accent /template/ ContentPresenter">
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="50%,100%" StartPoint="48%,0%">
                        <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="0.8" />
                        <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BoxShadow" Value="0 0 0 0 Transparent" />
        </Style>

        <Style Selector="^.Accent:pointerover">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style Selector="^.Accent:pointerover /template/ ContentPresenter">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="^.Accent:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <!-- <Style Selector="^ > TextBlock"> -->
        <!--     <Setter Property="FontWeight" Value="DemiBold" /> -->
        <!-- </Style> -->
        
        <Style Selector="^ /template/ ContentPresenter">
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>

        <Style Selector="^:pressed /template/ ContentPresenter">

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="0.97" ScaleY="0.97" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="^.Primary">
            <Setter Property="Padding" Value="18,10,18,8" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="50%,100%" StartPoint="48%,0%">

                        <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="0.5" />
                        <GradientStop Color="{DynamicResource SukiPrimaryColorGradient}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#2948c5" />

            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Duration="0:0:0.2" Property="Background" />
                </Transitions>
            </Setter>
        </Style>

        <!-- <Style Selector="^.Primary > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="White" /> -->
        <!-- </Style> -->
        
        <Style Selector="^.Primary /template/ ContentPresenter">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{DynamicResource SukiPrimaryColorGradient}" />
        </Style>

        <Style Selector="^.Primary:pointerover">
            <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>


        <Style Selector="^.Primary:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>

        <Style Selector="^.Outlined">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColor}" />
            <Setter Property="Background" Value="Transparent" />

            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Duration="0:0:0.3" Property="Background" />
                    <BrushTransition Duration="0:0:0.3" Property="BorderBrush" />
                </Transitions>
            </Setter>
        </Style>

        <!-- <Style Selector="^.Outlined > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" /> -->
        <!--     <Setter Property="Transitions"> -->
        <!--         <Transitions> -->
        <!--             <BrushTransition Duration="0:0:0.3" Property="Foreground" /> -->
        <!-- -->
        <!--         </Transitions> -->
        <!--     </Setter> -->
        <!-- </Style> -->
        
        <Style Selector="^.Outlined /template/ ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Duration="0:0:0.3" Property="Foreground" />

                </Transitions>
            </Setter>
        </Style>

        <!-- <Style Selector="^.Outlined:pointerover > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="White" /> -->
        <!-- </Style> -->

        <Style Selector="^.Outlined:pointerover /template/ ContentPresenter">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style Selector="^.Outlined:pointerover">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="50%,100%" StartPoint="48%,0%">

                        <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="0.5" />
                        <GradientStop Color="{DynamicResource SukiPrimaryColorGradient}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>


        <Style Selector="^.Outlined:pressed /template/ ContentPresenter">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="50%,100%" StartPoint="48%,0%">

                        <GradientStop Color="{DynamicResource SukiPrimaryColor}" Offset="0.5" />
                        <GradientStop Color="{DynamicResource SukiPrimaryColorGradient}" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="^.Success">
            <Setter Property="Background" Value="#cdf2ca" />
            <Setter Property="BorderBrush" Value="#b2e1ae" />
        </Style>
        <!-- <Style Selector="^.Success > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="#13831c" /> -->
        <!-- </Style> -->
        <Style Selector="^.Success /template/ ContentPresenter">
            <Setter Property="Foreground" Value="#13831c" />
        </Style>
        <Style Selector="^.Success:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#d7f5db" />
        </Style>
        <Style Selector="^.Success:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="#d7f5db" />
        </Style>

        <Style Selector="^.Danger">
            <Setter Property="Background" Value="#f2caca" />
            <Setter Property="BorderBrush" Value="#e4b5b5" />
        </Style>
        <!-- <Style Selector="^.Danger > TextBlock"> -->
        <!--     <Setter Property="Foreground" Value="#831313" /> -->
        <!-- </Style> -->
        <Style Selector="^.Danger /template/ ContentPresenter">
            <Setter Property="Foreground" Value="#831313" />
        </Style>
        <Style Selector="^.Danger:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#f5d7d7" />
        </Style>
        <Style Selector="^.Danger:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="#f5d7d7" />
        </Style>

        <Style Selector="^.Rounded">
            <Setter Property="CornerRadius" Value="100" />
            <Setter Property="Padding" Value="25,10,25,8" />
        </Style>

        <Style Selector="^.Primary /template/ ContentPresenter">
            <Setter Property="BoxShadow" Value="{DynamicResource SukiLowShadow}" />
        </Style>
        
        <Style Selector="^ /template/ ContentPresenter[FontWeight=DemiBold]">
            <Setter Property="FontFamily" Value="avares://SukiUI/Roboto-Medium.ttf#Roboto" />
        </Style>

        <Style Selector="^.Card">
            <Setter Property="Padding" Value="20" />
            <Setter Property="CornerRadius" Value="{DynamicResource MediumCornerRadius}" />
            <Setter Property="BorderThickness" Value="1.5" />
            <Setter Property="BorderBrush" Value="{DynamicResource SukiLightBorderBrush}" />
            <Setter Property="Background" Value="{DynamicResource SukiBackground}" />
            <Setter Property="Margin" Value="7" />
            <Setter Property="Template">
                <ControlTemplate>
                    <ContentPresenter
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="7"
                        Name="PART_ContentPresenter"
                        Padding="{TemplateBinding Padding}"
                        RecognizesAccessKey="True"
                        TextElement.Foreground="{TemplateBinding Foreground}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter>
        </Style>
    </ControlTheme>
    
</ResourceDictionary>