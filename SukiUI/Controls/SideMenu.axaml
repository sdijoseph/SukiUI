<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:suki="using:SukiUI.Controls"
        xmlns:material="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">
    <Design.PreviewWith>
        <suki:SideMenu />
    </Design.PreviewWith>
    
    <ControlTheme x:Key="{x:Type suki:SideMenu}" TargetType="suki:SideMenu">
        <!-- Set Defaults -->
        <Setter Property="Template">
            <ControlTemplate>
                <SplitView
                    DisplayMode="CompactInline"
                    IsPaneOpen="{TemplateBinding IsMenuVisible}"
                    OpenPaneLength="220">

                    <SplitView.Pane>
                        <Border>
                            <Panel Background="Transparent">
                                <!--  This sidebar toggle button is used when header content can overlap it  -->
                                <ToggleButton
                                    Classes="Accent"
                                    IsChecked="{TemplateBinding IsMenuVisible, Mode=TwoWay}"
                                    HorizontalAlignment="Right"
                                    IsVisible="{TemplateBinding CanHeaderContentOverlapToggleSidebarButton}"
                                    VerticalAlignment="Top">
                                    <Panel>
                                        <material:MaterialIcon
                                            Foreground="{DynamicResource SukiText}"
                                            IsVisible="{TemplateBinding IsMenuVisible, Converter={x:Static BoolConverters.Not}}"
                                            Kind="ChevronRight" />
                                        <material:MaterialIcon
                                            Foreground="{DynamicResource SukiText}"
                                            IsVisible="{TemplateBinding IsMenuVisible}"
                                            Kind="ChevronLeft" />
                                    </Panel>
                                </ToggleButton>

                                <DockPanel>
                                    <!--  This sidebar toggle button can't be overlapped by header content  -->
                                    <ToggleButton
                                        Classes="Accent"
                                        IsChecked="{TemplateBinding IsMenuVisible, Mode=TwoWay}"
                                        DockPanel.Dock="Top"
                                        HorizontalAlignment="Right"
                                        IsVisible="{TemplateBinding CanHeaderContentOverlapToggleSidebarButton, Converter={x:Static BoolConverters.Not}}"
                                        VerticalAlignment="Top">
                                        <Panel>
                                            <material:MaterialIcon
                                                Foreground="{DynamicResource SukiText}"
                                                IsVisible="{TemplateBinding IsMenuVisible, Converter={x:Static BoolConverters.Not}}"
                                                Kind="ChevronRight" />
                                            <material:MaterialIcon
                                                Foreground="{DynamicResource SukiText}"
                                                IsVisible="{TemplateBinding IsMenuVisible}"
                                                Kind="ChevronLeft" />
                                        </Panel>
                                    </ToggleButton>


                                    <Panel
                                        DockPanel.Dock="Top"
                                        IsVisible="{TemplateBinding IsMenuVisible}"
                                        MinHeight="{TemplateBinding HeaderMinHeight}">
                                        <ContentControl Content="{TemplateBinding HeaderContent}" />
                                    </Panel>

                                    <!--  Used to move menu icons down when sidebar is closed  -->
                                    <Panel
                                        DockPanel.Dock="Top"
                                        Height="40"
                                        IsVisible="{TemplateBinding IsSpacerEnabled}" />


                                    <ListBox
                                        x:Name="PART_FooterMenuItemsBox"
                                        DockPanel.Dock="Bottom"
                                        ItemsSource="{TemplateBinding FooterMenuItems}"
                                        Margin="0,0,0,12">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <suki:SideMenuItem />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    <ScrollViewer>
                                        <ListBox
                                            x:Name="PART_MenuItemsBox"
                                            ItemsSource="{TemplateBinding MenuItems}" 
                                            Margin="0,15,0,0">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <suki:SideMenuItem />
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </ScrollViewer>
                                </DockPanel>
                            </Panel>
                        </Border>
                    </SplitView.Pane>

                    <Border
                        Background="{DynamicResource SukiBackground}"
                        BorderBrush="{DynamicResource SukiBorderBrush}"
                        BorderThickness="1,0,0,0"
                        Margin="0,0,0,0" 
                        Name="ContentBorder">
                        <ContentControl Content="{TemplateBinding CurrentPage}" />

                    </Border>
                </SplitView>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
</ResourceDictionary>
